{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar _bezier = require('./bezier');\n\nvar Easing = function () {\n  function Easing() {\n    _classCallCheck(this, Easing);\n  }\n\n  _createClass(Easing, null, [{\n    key: 'step0',\n    value: function step0(n) {\n      return n > 0 ? 1 : 0;\n    }\n  }, {\n    key: 'step1',\n    value: function step1(n) {\n      return n >= 1 ? 1 : 0;\n    }\n  }, {\n    key: 'linear',\n    value: function linear(t) {\n      return t;\n    }\n  }, {\n    key: 'ease',\n    value: function ease(t) {\n      return _ease(t);\n    }\n  }, {\n    key: 'quad',\n    value: function quad(t) {\n      return t * t;\n    }\n  }, {\n    key: 'cubic',\n    value: function cubic(t) {\n      return t * t * t;\n    }\n  }, {\n    key: 'poly',\n    value: function poly(n) {\n      return function (t) {\n        return Math.pow(t, n);\n      };\n    }\n  }, {\n    key: 'sin',\n    value: function sin(t) {\n      return 1 - Math.cos(t * Math.PI / 2);\n    }\n  }, {\n    key: 'circle',\n    value: function circle(t) {\n      return 1 - Math.sqrt(1 - t * t);\n    }\n  }, {\n    key: 'exp',\n    value: function exp(t) {\n      return Math.pow(2, 10 * (t - 1));\n    }\n  }, {\n    key: 'elastic',\n    value: function elastic() {\n      var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var p = bounciness * Math.PI;\n      return function (t) {\n        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n      };\n    }\n  }, {\n    key: 'back',\n    value: function back(s) {\n      if (s === undefined) {\n        s = 1.70158;\n      }\n\n      return function (t) {\n        return t * t * ((s + 1) * t - s);\n      };\n    }\n  }, {\n    key: 'bounce',\n    value: function bounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        t -= 1.5 / 2.75;\n        return 7.5625 * t * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        t -= 2.25 / 2.75;\n        return 7.5625 * t * t + 0.9375;\n      }\n\n      t -= 2.625 / 2.75;\n      return 7.5625 * t * t + 0.984375;\n    }\n  }, {\n    key: 'bezier',\n    value: function bezier(x1, y1, x2, y2) {\n      return _bezier(x1, y1, x2, y2);\n    }\n  }, {\n    key: 'in',\n    value: function _in(easing) {\n      return easing;\n    }\n  }, {\n    key: 'out',\n    value: function out(easing) {\n      return function (t) {\n        return 1 - easing(1 - t);\n      };\n    }\n  }, {\n    key: 'inOut',\n    value: function inOut(easing) {\n      return function (t) {\n        if (t < 0.5) {\n          return easing(t * 2) / 2;\n        }\n\n        return 1 - easing((1 - t) * 2) / 2;\n      };\n    }\n  }]);\n\n  return Easing;\n}();\n\nvar _ease = Easing.bezier(0.42, 0, 1, 1);\n\nmodule.exports = Easing;","map":null,"metadata":{},"sourceType":"script"}