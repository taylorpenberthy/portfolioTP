{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Animated = require('./Animated');\n\nvar AnimatedWithChildren = require('./AnimatedWithChildren');\n\nvar AnimatedTransform = require('./AnimatedTransform');\n\nvar FlattenStyle = require('./injectable/FlattenStyle');\n\nvar AnimatedStyle = function (_AnimatedWithChildren) {\n  _inherits(AnimatedStyle, _AnimatedWithChildren);\n\n  function AnimatedStyle(style) {\n    _classCallCheck(this, AnimatedStyle);\n\n    var _this = _possibleConstructorReturn(this, (AnimatedStyle.__proto__ || Object.getPrototypeOf(AnimatedStyle)).call(this));\n\n    style = FlattenStyle.current(style) || {};\n\n    if (style.transform && !(style.transform instanceof Animated)) {\n      style = _extends({}, style, {\n        transform: new AnimatedTransform(style.transform)\n      });\n    }\n\n    _this._style = style;\n    return _this;\n  }\n\n  _createClass(AnimatedStyle, [{\n    key: '__getValue',\n    value: function __getValue() {\n      var style = {};\n\n      for (var key in this._style) {\n        var value = this._style[key];\n\n        if (value instanceof Animated) {\n          style[key] = value.__getValue();\n        } else {\n          style[key] = value;\n        }\n      }\n\n      return style;\n    }\n  }, {\n    key: '__getAnimatedValue',\n    value: function __getAnimatedValue() {\n      var style = {};\n\n      for (var key in this._style) {\n        var value = this._style[key];\n\n        if (value instanceof Animated) {\n          style[key] = value.__getAnimatedValue();\n        }\n      }\n\n      return style;\n    }\n  }, {\n    key: '__attach',\n    value: function __attach() {\n      for (var key in this._style) {\n        var value = this._style[key];\n\n        if (value instanceof Animated) {\n          value.__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: '__detach',\n    value: function __detach() {\n      for (var key in this._style) {\n        var value = this._style[key];\n\n        if (value instanceof Animated) {\n          value.__removeChild(this);\n        }\n      }\n    }\n  }]);\n\n  return AnimatedStyle;\n}(AnimatedWithChildren);\n\nmodule.exports = AnimatedStyle;","map":null,"metadata":{},"sourceType":"script"}